Artigo sobre vantagens e benefícios do uso de JavaScript:
url(https://www.hostgator.com.br/blog/java-script-primeiros-passos/)
Hostigator

O JavaScript, é uma ótima linguagem já que é muito versátil, 
podendo trabalhar tanto na parte client quanto a parte server de uma aplicação.
Não só isso ela também abre margem para criação de jogos com bibliotecas como
Melon.js e tantas outras. E integração com 
objetos IoT(Internet of Things- Internet das Coisas) com o braço do Node.js, 
e bibliotecas como Cylon.js entre outras bibliotecas.

Por ela ser uma linguiagem interpretada, no etanto, devem-se tomar algumas 
precauções, e quanto mais padronizado e bem arquitetado o projeto, melhor a robustez 
de implementação. Uma maneira de deixar o JS bem organizado,
coerente e altamente funcional, é utilizar das documentações de padronização ECMAScript.

url(https://www.ecma-international.org/publications-and-standards/standards/ecma-262/) 
Documet of EcmaScript;

Por se tratar de uma padronização que dita como o mercado de tecnologia, 
e até mesmo a tecnologia virá 
a se atualizar, sempre recomendado para consultas de 
desenvolvimento prático e implementação a leitura da penultima documentação,
A ultima padronização também é muito importante já que dela pode-se ter uma previsão
de onde a tecnologia se evoluirá, e também se ela continuará sendo relevante no futuro.
para métodos de aplicação prática utilizar a penultima versão da documentação;


OBS: antes de aprender a utilizar frameworks, 
é sempre recomendavel ter uma base sólida e firme de Lógica de Progrmação
e no caso uma base sólida do funcionamento da Linguagem JavaScript,
sendo Vanilla e ainda melhor dentro da padronização EcmaScript

Inicio de desenvolvimento:

para iniciar o desenvolvimento teremos que utilizar um 
navegador o qual recomendo o da Google chamado Chrome.
Para instalar o Browser, basta abrir o navegador padrão do sistema, 
e pesquisar por google chrome e clicar no site, e clicar no botão de instalar.

Com ele já instalado e  aberto 
clicar em f12 e abrirá as chamadas dev tools. 
Dentro do console desta aba já é possível fazer algumas codificações em js.

porém a melhor escolha para programar seria um
editor de código-fonte ou alguma IDE.
No caso utilizaremos um editor chamado
Visual Studio Code, segue o passo a passo para sua utilização:

abar o site
url(https://code.visualstudio.com/)
e instale a versão desejada, para iniciantes recomenda-se a utilização da versão estável.
É desejavel ler as documentações do editor por inteiro.
Como o estudo trata-se da linguagem JavaScript segue a parte da documentação essencial
para a linguagem aqui tratada.
url(https://code.visualstudio.com/docs/nodejs/working-with-javascript).

apartir deste momento já é possível programar em javaScript na forma pura, 
mais a diante será abordado o uso de Frameworks APIs e bibliotecas.
Recomenda-se ler todas as documentações citadas.

Uma das mais importantes documentações depois da ECMAScript segue abaixo:
url(https://developer.mozilla.org/pt-BR/docs/Web/JavaScript)
mdn web docs.

A escolha deste editor como uso primário, é a grande escalabilidade 
que ele pode trazer a projetos na linguagem JavaScript,
além de uma série de facilidades por conta de suas extensões e uma conexão
satisfatória com o GitHub uma ferramenta muito necessária e requisitada, 
que serve para o versionamento de arquivos, e um trabalho em equipe aprimorado.
o próprio console pode ser acessado de dentro do VS Code(Visual Studio Code).


https://developer.mozilla.org/pt-BR/docs/Learn/JavaScript/First_steps/What_is_JavaScript
JavaScript é uma linguagem de programação que permite a você criar conteúdo 
que se atualiza dinamicamente, 
controlar múltimídias, 
imagens animadas, e quase tudo do que mais há de intessante. 
è incrivel oque se pode realizar codando em JavaScript.

O núcleo da linguagem JavaScript consiste em alguns benefícios 
comuns da programação que permite a você fazer coisas como:

Armazenar conteúdo útil em variáveis. No exemplo acima, 
a propósito, nós pedimos que um novo nome seja inserido 
e armazenamos o nome em uma variável chamada nome.
Operações com pedaços de texto 
(conhecidos como "strings" em programação). 
No exemplo acima, nós pegamos a string "Jogador 1: "
e concatenamos (juntamos) com a variável nome para criar 
o texto completo "Jogador 1: Chris".
Executar o código em resposta a determinados eventos 
que ocorrem em uma página da Web. Nós usamos o click (en-US) 
no nosso exemplo acima para que quando clicassem no botão, 
rodasse o código que atualiza o texto.
E muito mais!


O que é ainda mais empolgante é a funcionalidade construída 
no topo do núcleo da linguagem JavaScript. 
As APIs (Application Programming Interfaces - 
Interface de Programação de Aplicativos) 
proveem a você superpoderes extras para usar no seu código JavaScript.

APIs são conjuntos prontos de blocos de construção de código 
que permitem que um desenvolvedor implemente programas que 
seriam difíceis ou impossíveis de implementar. 

as APIs trazem muios módulos e utilidades para o programa já que 
muitas vezem sem elas tarefas básicas poderiam se tornar árduas e difíoceis, 
se não por vezes imposíveis, as APIs basicamente são kits que ligam o
programa em outros programas, ou camadas de código dde um mesmo programa. 

Elas geralmente se dividem em duas categorias.

APIs de navegadores já vem implementadas no navegador, e são capazes 
de expor dados do ambiente do computador, ou fazer coisas complexas e 
úteis. Por exemplo:

A API DOM (Document Object Model) permite a você manipular HTML e CSS, 
criando, removendo e mudando HTML, aplicando dinamicamente novos estilos 
para a sua página, etc. Toda vez que você vê uma janela pop-up aparecer 
em uma página, ou vê algum novo conteúdo sendo exibido (como nós vimos 
acima na nossa simples demonstração), isso é o DOM em ação.

A API de Geolocalização recupera informações geográficas. 
É assim que o Google Maps consegue encontrar sua 
localização e colocar em um mapa.

As APIs Canvas e WebGL permite a você criar gráficos 2D e 3D animados. 
Há pessoas fazendo algumas coisas fantásticas usando essas tecnologias 
web — veja Chrome Experiments e webglsamples.

APIs de áudio e vídeo (en-US) como HTMLMediaElement (en-US) e WebRTC 
permitem a você fazer coisas realmente interessantes com multimídia, 
tanto tocar música e vídeo em uma página da web, como capturar vídeos com 
a sua câmera e exibir no computador de outra pessoa 
(veja Snapshot demo para ter uma ideia).


APIs de terceiros não estão implementados no navegador automaticamente, 
e você geralmente tem que pegar seu código e informações em algum 
lugar da Web. Por exemplo:

A API do Twitter permite a você fazer coisas como exibir seus 
últimos tweets no seu website.

A API do Google Maps permite a você inserir mapas customizados 
no seu site e outras diversas funcionalidades.

https://developer.mozilla.org/pt-BR/docs/Learn/JavaScript/Client-side_web_APIs/Introduction

As APIs (Application Programming Interfaces) são construções disponíveis nas linguagens de 
programação que permitem a desenvolvedores criar funcionalidades complexas mais facilmente. 
Tais construções abstraem o código mais complexo, fornecendo o uso de sintaxes mais simples 
em seu lugar.

no JavaScript já existem APIs préinstaladas no browser, oque facilita muito o trabalho.
pórem podemos ainda usar instalações de terceiros:

seguindo passos simples que serão apresentados nos videos a a seguir:

url(https://youtu.be/Bi5HsQz-87A)
Como integrar com uma API na PRÁTICA?(Passo a passo - Enviando SMS)
AtekitaDev
reumo: escolher uma api com boa documentação é essencial,
fazer a Lógica de programação da documentação, e então
abstrair para a linguagem desejada, no caso, JavaScript;


url(https://youtu.be/lc0VOosnlAc)
Aprenda a Usar APIs // Mão no Código #7
Código Fonte TV
resumo: mostrando a lógica por trás;



curiosidades sobre criação de APIs:
 
url(https://youtu.be/f7JWDLFhR_c)
Como fazer uma API (o jeito mais facil e moderno que já vi)
Filipe Deschamps



DIFERENÇAS ENTRE BIBLIOTECAS E FRAMEWORKS:


Bibliotecas JavaScript — em geral, um ou mais arquivos 
JavaScript contendo funções personalizadas , as quais 
podem ser usadas em sua página web para acelerar ou 
permitir escrever funcionalidades comuns. 
Exemplos: jQuery, Mootools e React.

Frameworks JavaScript — uma evolução das bibliotecas. 
Frameworks JavaScript (ex: Angular e Ember), normalmente, 
são pacotes de tecnologias HTML, CSS, JavaScript e outras, 
que você instala e usa para escrever
 uma aplicação web completa do zero. 
A principal diferença entre uma biblioteca e um framework 
é a inversão de controle. Quando um método de uma biblioteca 
é chamado, a pessoa desenvolvedora não está sob controle. 
Em um framework, o controle inverter-se: é o framework 
que chama o código da pessoa desenvolvedora.


Um artigo que exemplifica um pouco mais podem ser estes:

url(https://www.freecodecamp.org/portuguese/news/a-diferenca-entre-um-framework-e-uma-biblioteca/#:~:text=A%20diferen%C3%A7a%20t%C3%A9cnica%20entre%20um,est%C3%A1%20ao%20encargo%20do%20fluxo.)
freecodecamp

url(https://cursos.alura.com.br/forum/topico-qual-e-a-diferenca-de-api-biblioteca-e-framework-38546)
Alura


documentação de alguns frameworks e ambientes utilizados no JavaScript
documentação de framework Angular:
url(https://angular.io/docs)

documentação de framework Vue.js:
url(https://vuejs.org/guide/introduction.html)

documentação Node.js
url(https://nodejs.org/en/docs/)
obs: o Node é um ambiente de execução baseada no "motor" V8 criado pela Google para o navegador Chrome.

Cursos e tutoriais sobre JavaScript:

url(https://youtube.com/playlist?list=PLHz_AreHm4dlsK3Nr9GVvXCbpQyHQl1o1)
Curso Grátis de JavaScript e ECMAScript para Iniciantes
Curso em Video 


url(https://www.youtube.com/watch?v=i6Oi-YtXnAU)
Curso Javascript Completo 2020 [Iniciantes] + 14 Mini-Projetos
Dev Aprender

url(https://youtu.be/GFO_txvwK_c)
JavaScript Game Development Course for Beginners
freeCodeCamp.org 









